import io.swagger.annotations.*;

{{#description}}@ApiModel(description="{{{description}}}"){{/description}}
{{>generatedAnnotation}}
public class {{classname}} {{#parent}}extends {{{parent}}}{{/parent}} {{#serializableModel}}implements Serializable{{/serializableModel}} {
{{#serializableModel}}
  private static final long serialVersionUID = 1L;
{{/serializableModel}}
  {{#vars}}{{#is this 'enum'}}

{{>enumClass}}{{/is}}{{#is items 'enum'}}{{#items}}

{{>enumClass}}{{/items}}{{/is}}
  private {{{datatypeWithEnum}}} {{name}} = {{{defaultValue}}};{{/vars}}

  {{#vars}}
  /**
   {{#description}}
   * {{description}}
   {{/description}}
   {{#minimum}}
   * minimum: {{minimum}}
   {{/minimum}}
   {{#maximum}}
   * maximum: {{maximum}}
   {{/maximum}}
   **/
  {{#vendorExtensions.extraAnnotation}}{{{vendorExtensions.extraAnnotation}}}{{/vendorExtensions.extraAnnotation}}
  @ApiModelProperty({{#example}}example = "{{{example}}}", {{/example}}{{#required}}required = {{required}}, {{/required}}value = "{{{description}}}")
  @JsonProperty("{{baseName}}")
{{#useBeanValidation}}{{>beanValidation}}{{/useBeanValidation}}  public {{{datatypeWithEnum}}} {{#is this 'boolean'}}is{{/is}}{{getter}}() {
    return {{name}};
  }
  public void {{setter}}({{{datatypeWithEnum}}} {{name}}) {
    this.{{name}} = {{name}};
  }

  {{/vars}}

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    {{classname}} {{classVarName}} = ({{classname}}) o;{{#has this 'vars'}}
    return {{#vars}}Objects.equals({{name}}, {{classVarName}}.{{name}}){{#has this 'more'}} &&
        {{/has}}{{#hasNot this 'more'}};{{/hasNot}}{{/vars}}{{/has}}{{#hasNot this 'vars'}}
    return true;{{/hasNot}}
  }

  @Override
  public int hashCode() {
    return Objects.hash({{#vars}}{{name}}{{#has this 'more'}}, {{/has}}{{/vars}});
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class {{classname}} {\n");
    {{#parent}}sb.append("    ").append(toIndentedString(super.toString())).append("\n");{{/parent}}
    {{#vars}}sb.append("    {{name}}: ").append(toIndentedString({{name}})).append("\n");
    {{/vars}}sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
